import{_ as t,c as a,o as e,ad as s,at as l,au as r,av as p,aw as h,ax as n,ay as g,az as o,aA as d,aB as c,aC as m,aD as k,aE as _,aF as u}from"./chunks/framework.aV7AXeQK.js";const v=JSON.parse('{"title":"魔法上网","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://vite.dev/deploy/static-deploy"}],["meta",{"property":"og:title","content":"魔法上网"}]]},"headers":[],"relativePath":"deploy/static-deploy.md","filePath":"deploy/static-deploy.md"}'),b={name:"deploy/static-deploy.md"};function f(y,i,w,E,A,F){return e(),a("div",null,[...i[0]||(i[0]=[s('<h1 id="deploying-a-static-site" tabindex="-1">魔法上网 <a class="header-anchor" href="#deploying-a-static-site" aria-label="Permalink to “魔法上网”">​</a></h1><p>首先你得安装魔法工具：</p><ul><li>Karing <ul><li>Karing目前提供了Windows、MacOS、Android、IOS和TVOS，5种客户端的支持，各位可以根据需要下载适合自己的客户端</li><li>官网：<a href="https://karing.app" target="_blank" rel="noreferrer">https://karing.app</a></li><li>Github：<a href="https://github.com/KaringX/karing" target="_blank" rel="noreferrer">https://github.com/KaringX/karing</a></li></ul></li><li>Clash Party <ul><li>自行Google 或 github</li></ul></li><li>v2rayN <ul><li>自行Google 或 github</li></ul></li><li>...</li></ul><div class="tip custom-block"><p class="custom-block-title">注意</p><p>假设你已经有魔法工具了。</p></div><h2 id="building-the-app" tabindex="-1">方式一 <a class="header-anchor" href="#building-the-app" aria-label="Permalink to “方式一”">​</a></h2><p>先去获取一个订阅，什么要钱？ 不，当然要白嫖了。</p><p>fofa:<a href="https://fofa.info/" target="_blank" rel="noreferrer">地址</a></p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">body</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;port: 7890&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; body</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;socks-port: 7891&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; body</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;allow-lan: true&quot;</span></span></code></pre></div><p><img src="'+l+'" alt="img.png" width="1920" height="945"></p><h3 id="testing-the-app-locally" tabindex="-1">导入工具测试 <a class="header-anchor" href="#testing-the-app-locally" aria-label="Permalink to “导入工具测试”">​</a></h3><p>然后随便打开一个链接，如果是下方类似内容，就导入工具测试 <img src="'+r+'" alt="img.png" width="1897" height="978"></p><h2 id="building-the-app2" tabindex="-1">方式二 <a class="header-anchor" href="#building-the-app2" aria-label="Permalink to “方式二”">​</a></h2><p>直接用大佬的🔥🔥🔥共享订阅</p><p><a href="https://github.com/wzdnzd/aggregator/issues/91" target="_blank" rel="noreferrer">https://github.com/wzdnzd/aggregator/issues/91</a></p><h2 id="building-the-app3" tabindex="-1">方式三 <a class="header-anchor" href="#building-the-app3" aria-label="Permalink to “方式三”">​</a></h2><p>主要分享一下最新的基于Github Action使用方法。</p><p>流程如下：</p><ol><li><p>fork作者的代码仓库：<a href="https://github.com/wzdnzd/aggregator" target="_blank" rel="noreferrer">https://github.com/wzdnzd/aggregator</a></p></li><li><p>启用Actions，如下图： <img src="'+p+'" alt="img.png" width="1961" height="811"></p></li><li><p>禁用不必要的workflow，比如Checkin和Process，具体操作如下： <img src="'+h+'" alt="img.png" width="2482" height="485"></p></li><li><p>创建gist并获取到username/gist_id（记得保存，稍后要用），打开 <a href="https://gist.github.com" target="_blank" rel="noreferrer">https://gist.github.com</a>，随便创建一个，内容随便填，如图所示 <img src="'+n+'" alt="img_1.png" width="2095" height="978"></p></li><li><p>回到 <a href="https://github.com/settings/personal-access-tokens" target="_blank" rel="noreferrer">https://github.com/settings/personal-access-tokens</a> 点击Generate new token按钮创建 PAT。名字随便填，过期时间选得久一点，重要的是在Account permissions里授予Gists的读写权限，创建好后复制生成的token稍后用 <img src="'+g+'" alt="img_2.png" width="1159" height="951"><img src="'+o+'" alt="img_3.png" width="1204" height="325"></p></li><li><p>到仓库页面的Settings里设置环境变量，变量名为GIST_LINK和GIST_PAT，值分别为第4和5两步获取到的内容 <img src="'+d+'" alt="img_4.png" width="1850" height="1148"><img src="'+c+'" alt="img_5.png" width="1248" height="673"></p></li><li><p>手动运行测试是否能够正常执行并成功推送到gist <img src="'+m+'" alt="img_6.png" width="2466" height="511"> 如果你看到类似以下内容，说明你跑成功了（也可以到刚刚新建的gist里查看内容） <img src="'+k+'" alt="img_7.png" width="1564" height="130"></p></li><li><p>添加订阅到你的翻墙软件里，添加不了的可以先订阅转换一下 <img src="'+_+'" alt="img_8.png" width="1493" height="554"><img src="'+u+'" alt="img_9.png" width="1803" height="460"></p></li><li><p>小建议：</p><ul><li>可以配合Watchingfun大佬的 <a href="https://linux.do/t/topic/89820" target="_blank" rel="noreferrer">自用clash verge的 js脚本配置分享</a> 使用</li><li>如果你也在用，可以去给项目作者点个star，更新挺频繁，也很贴心</li><li>启用Action后如果中途你不想搞了，一定要禁用workflow或Action，因为默认每两小时自动执行一次</li></ul></li></ol>',18)])])}const x=t(b,[["render",f]]);export{v as __pageData,x as default};
