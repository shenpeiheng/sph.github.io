import{_ as i,c as e,o as g,ad as p}from"./chunks/framework.aV7AXeQK.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://vite.dev/deploy/karing"}],["meta",{"property":"og:title","content":""}]]},"headers":[],"relativePath":"deploy/karing.md","filePath":"deploy/karing.md"}'),r={name:"deploy/karing.md"};function t(m,a,n,o,l,s){return g(),e("div",null,[...a[0]||(a[0]=[p("<p>前天晚上一位佬友问我Karing客户端怎么使用，因为陪孩子所以简单说了一下，今天我就分享一下Karing客户端应该怎么使用</p><p>karing的客户端可以从以下两个地方下载：</p><p>1、Github</p><p>github.com</p><p>GitHub - KaringX/karing: Simple &amp; Powerful proxy utility, Support routing... Simple &amp; Powerful proxy utility, Support routing rules for clash/sing-box</p><p>2、karing的官网</p><p>karing.app</p><p>KaringX | Karing - Clash compatible &amp; Powerful proxy utility 兼容Clash的通用网络代理工具, 支持clash/v2ray/ss订阅</p><p>Karing目前提供了Windows、MacOS、Android、IOS和TVOS，5种客户端的支持，各位可以根据需要下载适合自己的客户端</p><p>今天我就以Windows客户端分享如何使用，在Github的Release中，Windows客户端提供了两个版本下载，一个是安装版，一个是绿色版，可以根据习惯下载</p><p>image image 293×104 4.82 KB 我下载了绿色版的，直接解压就可以运行，现在打开Karing的客户端</p><p>image image 374×630 17.1 KB 1、在设置节点之前，先点击一下右下角的分流，在这里把国家和地区设置为我们现在上网的地区，下方的Rule Set这里可以保持默认即可，因为其中规则是内置设定好的，只要联网即可起作用，当然也可以自己设定规则 image image 382×349 6.68 KB image image 377×283 4.35 KB image image 382×236 7.38 KB image image 380×104 2.93 KB 2、现在我们给它配置一个订阅节点，回到首页，点击左上角的设置，点击添加配置，再点击添加配置链接 image image 377×521 5.62 KB image image 377×528 4.89 KB image image 381×511 7.78 KB 3、由于Karing支持的协议很大，在这里可以添加各种协议的订阅节点或者禁止配置某种协议的节点，现在我添加的是一个我订阅节点，并且勾选了自动移除失效服务器，点击右上角的对号，如果出现添加成功弹窗，就说明这个订阅节点是有效的 image image 369×375 4.38 KB image image 380×387 12.3 KB image image 371×237 6.3 KB 4、现在我们可以在设置页，点击我的配置，点击闪电式样的箭头，它就会对这个订阅节点的所以节点，进行延迟测试 image image 378×613 6.94 KB 5、通常测试完，它会自动连接最快的节点，我们点击最下方已连接的节点后面的箭头 image image 377×633 18.4 KB 6、在这个页面，点击右上角的齿轮，勾选最后两项，可以对有效服务器延迟从快到慢排序，同时隐藏无效的服务器 image image 380×640 6.41 KB image image 380×285 4.59 KB 7、再回到主页面，一定要点击启用系统代理，并且可以设置是全局，或者是按照规则上网 image image 376×633 18.3 KB 以上就是Karing代理客户端的设置过程，如果有不明白的地方，可以随时留言讨论沟通…</p>",12)])])}const c=i(r,[["render",t]]);export{d as __pageData,c as default};
